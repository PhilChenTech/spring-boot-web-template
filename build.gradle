plugins {
    id 'org.springframework.boot' version '3.2.1' apply false
    id 'io.spring.dependency-management' version '1.1.2' apply false
    id 'jacoco'
    id 'java'
    id 'pmd'
}

allprojects {
    group = 'com.nicenpc'
    version = '1.0.0'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'jacoco'
    apply plugin: 'pmd'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    dependencyManagement {
        imports {
            mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
        }
    }

    dependencies {
        // MapStruct 依賴 - 在所有子專案中可用
        implementation 'org.mapstruct:mapstruct:1.5.5.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
        
        // P3C 阿里巴巴代码规范检查
        compile 'com.alibaba.p3c:p3c-pmd:1.3.0'

        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
        
        // 解決 Java 21 動態 Agent 載入警告
        jvmArgs '-XX:+EnableDynamicAgentLoading'
    }
    
    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = true
            html.required = true
        }
        
        // 設定覆蓋率門檻
        finalizedBy jacocoTestCoverageVerification
    }
    
    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    minimum = 0.70 // 70% 最低覆蓋率要求
                }
            }
            rule {
                enabled = true
                element = 'CLASS'
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.60 // 每個類別至少 60%
                }
            }
        }
    }

    // PMD 配置
    pmd {
        toolVersion = '6.55.0'
        ruleSetFiles = files("${rootProject.projectDir}/config/pmd/p3c-pmd-ruleset.xml")
        ruleSets = []
        ignoreFailures = false
        consoleOutput = true
    }

    pmdMain {
        reports {
            xml.required = true
            html.required = true
        }
    }

    pmdTest {
        reports {
            xml.required = true
            html.required = true
        }
    }
}
